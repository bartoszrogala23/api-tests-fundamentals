io.restassured.specification.RequestSpecification public abstract RequestSpecification spec(RequestSpecification requestSpecificationToMerge)
Add request data from a pre-defined specification. E.g.
       RequestSpecification requestSpec = new RequestSpecBuilder().addParam("parameter1", "value1").build();

       given().
               spec(requestSpec).
               param("parameter2", "value2").
       when().
              get("/something");


This is useful when you want to reuse an entire specification across multiple requests.

//model parser
//package com.puma.plm.api.core.labellingpackagingservice;
//
//import java.util.List;
//
//import com.puma.plm.api.core.labellingpackagingservice.models.FormDataSupplier;
//import com.puma.plm.api.core.labellingpackagingservice.models.OverviewSearch;
//import com.puma.plm.api.core.labellingpackagingservice.models.Variation;
//import com.puma.plm.api.core.parser.ResponseParser;
//import lombok.NoArgsConstructor;
//
//import static com.puma.plm.api.core.labellingpackagingservice.LabellingPackagingService.getVariationWithId;
//import static com.puma.plm.api.core.labellingpackagingservice.util.LabellingPackagingUtil.getFirstVariationIdFound;
//import static com.puma.plm.api.core.parser.ObjectParser.toJson;
//import static lombok.AccessLevel.NONE;
//import static org.apache.http.HttpStatus.SC_OK;
//
//@NoArgsConstructor(access = NONE)
//public class LabellingPackagingModelParser {
//
//    public static List<FormDataSupplier> createFormDataSuppliersRequest() {
//        var response = LabellingPackagingService.getFormDataSuppliers(SC_OK);
//
//        return ResponseParser.parseCollection(response, FormDataSupplier[].class);
//    }
//
//    public static OverviewSearch createOverviewSearchRequest(Variation body) {
//        var response = LabellingPackagingService.postSearchOverview(toJson(body), SC_OK);
//
//        return ResponseParser.parse(response, OverviewSearch.class);
//    }
//
//    public static Variation getVariation() {
//        var response = getVariationWithId(getFirstVariationIdFound(), SC_OK);
//
//        return ResponseParser.parse(response, Variation.class);
//    }
//}